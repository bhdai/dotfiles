{
  // General UI settings
  "window.zoomLevel": 0.5,
  "workbench.editor.showTabs": "single",
  "material-icon-theme.hidesExplorerArrows": true,
  "workbench.productIconTheme": "fluent-icons",
  "window.titleBarStyle": "native",
  "window.customTitleBarVisibility": "never",
  "workbench.colorTheme": "Tokyo Night Storm",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.sideBar.location": "right",
  "symbols.hidesExplorerArrows": false,
  // Editor settings
  "editor.fontFamily": "'BlexMono Nerd Font Medium', Consolas, 'Courier New', monospace",
  "editor.fontSize": 15,
  "editor.lineNumbers": "relative",
  "editor.fontLigatures": true,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.selectionHighlight": false,
  "editor.occurrencesHighlight": "off",
  "editor.minimap.enabled": false,
  "editor.mouseWheelZoom": true,
  "editor.largeFileOptimizations": false,
  "editor.autoClosingOvertype": "always",
  "editor.cursorBlinking": "expand",
  "explorer.openEditors.visible": 1,
  "files.autoSave": "afterDelay",
  "cSpell.enabledFileTypes": {
    "plaintext": true,
    "markdown": true,
    "latex": true,
    "jupyter": true
  },
  "cSpell.enabledSchemes": {
    "file": true,
    "untitled": true,
    "vscode-notebook-cell": true,
    "vscode-userdata": true,
    "vscode-scm": true,
    "comment": true
  },
  "cSpell.diagnosticLevelFlaggedWords": "Warning",
  "cSpell.userWords": [
    "Convolutional",
    "overfit",
    "overfitted",
    "Overfitting",
    "partitioner",
    "reflexible"
  ],
  // Apc Customize UI settings
  "apc.electron": {
    "frame": false
  },
  "apc.header": {
    "height": 40
  },
  "apc.menubar.compact": true,
  "apc.stylesheet": {
    ".quick-input-widget": {
      "position": "absolute !important",
      "top": "200px !important",
      "left": "50%",
      "border-radius": "10px",
      "border": "1px solid var(--vscode-textSeparator-foreground) !important",
      "box-shadow": "0 0 60px 0 rgba(0,0,0,0.2) !important"
    },
    ".monaco-editor .monaco-hover": "border-radius: 12px;",
    ".monaco-editor .parameter-hints-widget": "border-radius: 12px;",
    ".monaco-editor .suggest-details, .monaco-editor .suggest-widget": "border-radius: 12px;",
    ".monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused": "border-radius: 12px;"
  },
  // Jupyter settings
  "jupyter.widgetScriptSources": [
    "jsdelivr.com",
    "unpkg.com"
  ],
  "jupyter.enableExtendedPythonKernelCompletions": true,
  // Remote development settings
  // "security.allowedUNCHosts": [
  //   "wsl.localhost"
  // ],
  "remote.SSH.configFile": "~/.ssh/config",
  "remote.SSH.remotePlatform": {
    "kaggle_notebook": "linux",
    "0.tcp.ap.ngrok.io": "linux",
    "Kaggle: Ubuntu": "linux",
    "Ubuntu": "linux",
    "Kaggle": "linux"
  },
  // Python settings
  "python.languageServer": "Pylance",
  // Codesnap settings
  "codesnap.shutterAction": "copy",
  // Security settings
  "security.workspace.trust.untrustedFiles": "open",
  // ZenMode setting
  "zenMode.centerLayout": false,
  "zenMode.hideLineNumbers": false,
  "cSpell.diagnosticLevel": "Hint",
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  // VSCode Neovim setting
  "vscode-neovim.neovimExecutablePaths.linux": "/usr//bin/nvim",
  "editor.scrollBeyondLastLine": false,
  "keyboard.dispatch": "keyCode", // keep swapped keys work in neovim extension
  "vscode-neovim.neovimInitVimPaths.linux": "~/.config/nvim/init.lua",
  "remote.extensionKind": {
    "asvetliakov.vscode-neovim": [
      "workspace"
    ]
  },
  "remote.autoForwardPortsSource": "hybrid",
  "update.mode": "manual",
  // vscode jupyter notebook
  "notebook.lineNumbers": "on",
  // whichkey configs
  "whichkey.delay": 0,
  "whichkey.sortOrder": "alphabetically",
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "k",
      "name": "Close active editor",
      "type": "command",
      "command": "workbench.action.closeActiveEditor"
    },
    {
      "key": "t",
      "name": "Toggle Terminal",
      "type": "command",
      "command": "workbench.action.togglePanel"
    },
    // this is for test
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.view.explorer"
    },
    /*         {
            "key": "f",
            "name": "Find & Replace...",
            "type": "bindings",
            "bindings": [
                {
                    "key": "f",
                    "name": "File",
                    "type": "command",
                    "command": "editor.action.startFindReplaceAction"
                },
                {
                    "key": "s",
                    "name": "Symbol",
                    "type": "command",
                    "command": "editor.action.rename",
                    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
                },
                {
                    "key": "p",
                    "name": "Project",
                    "type": "command",
                    "command": "workbench.action.replaceInFiles"
                }
            ]
        }, */
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    // {
    //     "key": "s",
    //     "name": "Search...",
    //     "type": "bindings",
    //     "bindings": [
    //         {
    //             "key": "f",
    //             "name": "files",
    //             "type": "command",
    //             "command": "workbench.action.quickOpen"
    //         },
    //         {
    //             "key": "t",
    //             "name": "text",
    //             "type": "command",
    //             "command": "workbench.action.findInFiles"
    //         }
    //     ]
    // },
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "binocular.general.additionalSearchLocations": [
    "./",
    "~/.config",
    "~/ghq",
    "~/Downloads",
    "~/workplace",
    "~/",
  ],
  "window.density.editorTabHeight": "compact",
  "workbench.editor.enablePreview": false,
  "code-runner.runInTerminal": true,
  "editor.tabSize": 2
}