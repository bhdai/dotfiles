// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "editorTextFocus && neovim.init && neovim.mode != 'insert'",
    },
    {
        "key": "ctrl+.",
        "command": "keyboard-quickfix.openQuickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly",
    },
    {
        "key": "Shift+.",
        "command": "vscode-neovim.send",
        "when": "!inputFocus && !editorTextFocus",
        "args": ":"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminal.active",
    },
    // key binding for mini.move
    //----------------------------------------
    {
        "key": "alt+h",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && (neovim.mode == 'normal' || neovim.mode == 'visual')",
        "args": "<M-h>",
    },
    {
        "key": "alt+j",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && (neovim.mode == 'normal' || neovim.mode == 'visual')",
        "args": "<M-j>"
    },
    {
        "key": "alt+k",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && (neovim.mode == 'normal' || neovim.mode == 'visual')",
        "args": "<M-k>"
    },
    {
        "key": "alt+l",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && (neovim.mode == 'normal' || neovim.mode == 'visual')",
        "args": "<M-l>"
    },
    //----------------------------------------
    // rebind to neovim like
    {
        "key": "space shift+p",
        "command": "workbench.action.quickOpen",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "space space",
        "command": "whichkey.show",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "space f f",
        "command": "binocular.searchFileConfiguredFolders",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "space f d",
        "command": "binocular.searchDirectoryConfiguredFolders",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "space f g",
        "command": "binocular.searchFileHistory",
        "when": "!editorTextFocus && !inputFocus"
    }
]